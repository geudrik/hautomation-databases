"""Add in relational mappings for flask-principal ease of use

Revision ID: 40a8e554796c
Revises: e1e967f56f02
Create Date: 2016-11-12 11:57:34.832344

"""

# revision identifiers, used by Alembic.
revision = '40a8e554796c'
down_revision = 'e1e967f56f02'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from hsdb import HomestackDatabase as HSDB
from hsdb import Role as HSRole
from hsdb import UserGroup as HSUserGroup

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserGroupsToRoles',
    sa.Column('user_group_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('role_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['Roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_group_id'], ['UserGroups.group_id'], )
    )
    op.create_table('UsersToUserGroups',
    sa.Column('user_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('user_group_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['user_group_id'], ['UserGroups.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], )
    )
    ### end Alembic commands ###

    # Create a few base Roles
    roles = ["admin", "read_all", "hue_rw", "nest_rw"]
    for role in roles:
        HSRole.insert(name=role)

    # Create a few base groups
    groups = {
        "adminstrator" : ['admin'],
        "user" : ['read_all'],
        "google" : ['hue_rw', 'nest_rw']
    }

    for group, roles in groups.iteritems():
        g = HSUserGroup.insert(name=group)

        for role in roles:
            r = HSRole.filter_by(name=role).first()
            g.roles.append(r)

    HSDB._session.commit()



def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('UsersToUserGroups')
    op.drop_table('UserGroupsToRoles')
    ### end Alembic commands ###
